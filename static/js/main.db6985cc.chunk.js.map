{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","currentTabId","map","tab","id","includes","className","isSelected","classNames","href","onClick","changeTab","title","find","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAsB,SAACC,GAAW,IAAD,EAE1CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cASIC,EALGH,EACJI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MACfC,SAASN,GAIVA,EACAD,EAAK,GAAGM,GAUZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKI,KAAI,SAAAC,GACR,IAAMI,EAAaN,IAAiBE,EAAIC,GAExC,OACE,oBACEE,UAAWE,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBA1BP,SAACP,GACbA,EAAIC,KAAOH,GAIfD,EAAcG,GAqBeQ,CAAUR,IAH3B,SAKGA,EAAIS,SAPFT,EAAIC,WAenB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,mBACGR,EAAKe,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4Ce,cCzDxChB,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAclB,EAAK,IAAzD,mBAAOmB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACuBW,EAAYL,SAGnC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAekB,EAAYb,GAC3BJ,cAbY,SAACG,GACjBe,EAAef,UCdnBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.db6985cc.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype PropsTabs = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: FC<PropsTabs> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const isValidCurrentTabId = () => {\n    return tabs\n      .map(tab => tab.id)\n      .includes(selectedTabId);\n  };\n\n  const currentTabId = isValidCurrentTabId()\n    ? selectedTabId\n    : tabs[0].id;\n\n  const changeTab = (tab: Tab) => {\n    if (tab.id === currentTabId) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = currentTabId === tab.id;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isSelected,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => changeTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  const changeTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        { `Selected tab is ${selectedTab.title}` }\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={changeTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}